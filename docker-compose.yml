# ðŸ¤– Next-Generation Hive-Mind Lottery Prediction System
# Docker Compose orchestration for complete system deployment

version: '3.8'

services:
  # Main Hive-Mind Application
  hive-mind:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: hive-mind-app
    ports:
      - "8000:8000"
    environment:
      - HIVE_MIND_ENV=production
      - DATABASE_URL=sqlite:///data/lottery_hive.db
      - REDIS_URL=redis://redis:6379/0
      - ML_BACKEND=hybrid
      - LOG_LEVEL=INFO
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./models:/app/models
      - ./config:/app/config
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - hive-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/monitoring/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis Cache & Message Broker
  redis:
    image: redis:7-alpine
    container_name: hive-mind-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - hive-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: hive-mind-prometheus
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    restart: unless-stopped
    networks:
      - hive-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 512M

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: hive-mind-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=hivemind2024
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - hive-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

  # Nginx Reverse Proxy & Load Balancer
  nginx:
    image: nginx:alpine
    container_name: hive-mind-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - hive-mind
    restart: unless-stopped
    networks:
      - hive-network
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  # Log Aggregation
  loki:
    image: grafana/loki:latest
    container_name: hive-mind-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
      - ./monitoring/loki.yml:/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - hive-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Log Forwarder
  promtail:
    image: grafana/promtail:latest
    container_name: hive-mind-promtail
    volumes:
      - ./logs:/var/log/hive-mind
      - ./monitoring/promtail.yml:/etc/promtail/config.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    restart: unless-stopped
    networks:
      - hive-network

# Volumes for persistent data
volumes:
  redis-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local

# Network configuration
networks:
  hive-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Development override for local development
---
# docker-compose.override.yml (for development)
version: '3.8'

services:
  hive-mind:
    build:
      target: builder
    environment:
      - HIVE_MIND_ENV=development
      - LOG_LEVEL=DEBUG
    volumes:
      - ./src:/app/src
      - ./data:/app/data
      - ./config:/app/config
    ports:
      - "8000:8000"
      - "5678:5678"  # Debug port